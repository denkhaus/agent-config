// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/denkhaus/agents/pkg/tools/project

package project

// addTaskDependencyArgs defines the arguments for adding a task dependency
_#addTaskDependencyArgs: {
	task_id:            string @go(TaskID)
	depends_on_task_id: string @go(DependsOnTaskID)
}

// addTaskDependencyResult defines the result of adding a task dependency
_#addTaskDependencyResult: {
	task?:   null | #Task @go(Task,*Task)
	message: string       @go(Message)
}

// removeTaskDependencyArgs defines the arguments for removing a task dependency
_#removeTaskDependencyArgs: {
	task_id:            string @go(TaskID)
	depends_on_task_id: string @go(DependsOnTaskID)
}

// removeTaskDependencyResult defines the result of removing a task dependency
_#removeTaskDependencyResult: {
	task?:   null | #Task @go(Task,*Task)
	message: string       @go(Message)
}

// getTaskDependenciesArgs defines the arguments for getting task dependencies
_#getTaskDependenciesArgs: {
	task_id: string @go(TaskID)
}

// getTaskDependenciesResult defines the result of getting task dependencies
_#getTaskDependenciesResult: {
	tasks?: [...null | #Task] @go(Tasks,[]*Task)
	count:   int    @go(Count)
	message: string @go(Message)
}

// getDependentTasksArgs defines the arguments for getting dependent tasks
_#getDependentTasksArgs: {
	task_id: string @go(TaskID)
}

// getDependentTasksResult defines the result of getting dependent tasks
_#getDependentTasksResult: {
	tasks?: [...null | #Task] @go(Tasks,[]*Task)
	count:   int    @go(Count)
	message: string @go(Message)
}
