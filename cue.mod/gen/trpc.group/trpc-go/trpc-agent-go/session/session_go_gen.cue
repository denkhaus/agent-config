// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go trpc.group/trpc-go/trpc-agent-go/session

// Package session provides the core session functionality.
package session

import (
	"trpc.group/trpc-go/trpc-agent-go/event"
	"time"
)

// StateMap is a map of state key-value pairs.
#StateMap: {[string]: bytes}

// Session is the interface that all sessions must implement.
#Session: {
	id:      string    @go(ID)
	appName: string    @go(AppName)
	userID:  string    @go(UserID)
	state:   #StateMap @go(State)
	events: [...event.#Event] @go(Events,[]event.Event)
	updatedAt: time.Time @go(UpdatedAt)
	createdAt: time.Time @go(CreatedAt)
}

// Options is the options for getting a session.
#Options: {
	EventNum:  int
	EventTime: time.Time
}

// Service is the interface that all session services must implement.
#Service: _

// Key is the key for a session.
#Key: {
	AppName:   string
	UserID:    string
	SessionID: string
}

// UserKey is the key for a user.
#UserKey: {
	AppName: string
	UserID:  string
}
